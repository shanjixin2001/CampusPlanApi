# 项目相关配置
backendapi:
  # 名称
  name: campusapi
  # 版本
  version: 4.0.0
  # 文件路径 Linux环境
  profile: /home/campusplan
  # 文件路径 Windows环境
#  profile: I:/upload/campusplan
# 开发环境配置
server:
  # 端口号
  port: 8087
  tomcat:
    #tomcat请求连接时长
    connection-timeout: 18000000


# Spring配置
spring:
  ## 让404错误抛出异常，需要同时设置spring.resources.add-mappings为false
  mvc:
    throw-exception-if-no-handler-found: true
  # 主库数据源
  datasource:
   # 数据库连接地址
    url: jdbc:mysql://rm-2ze1r823l2w794lx5.mysql.rds.aliyuncs.com:3306/campusplan?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&allowMultiQueries=true
   # 数据库账号
    username: meng
   # 数据库密码
    password: Mengchengxing123

    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    #配置表情包的插入格式
    dbcp2:
      connection-init-sqls: set names utf8mb4


  # redis配置
  redis:
    # Redis数据库索引（默认为0）
    database: 1
    # Redis服务器地址
    host: 127.0.0.1
    # Redis服务器连接端口
    port: 6379
    # 连接超时时间
    timeout: 10000
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0
   # Redis服务器连接密码（默认为空）
    password: 123456

  # 文件上传
  servlet:
    multipart:
      #是否启用http上传处理
      enabled: true
      #最大请求文件的大小
      max-request-size: 1024MB
      #设置单个文件最大长度
      max-file-size: 1024MB
      #当文件达到多少时进行磁盘写入
      file-size-threshold: 50MB

  #Http配置
  http:
    multipart:
      #最大文件不超过1GB
      maxFileSize: 1024Mb
      #上传文件不超过1GB
      maxRequestSize: 1024Mb

  # 文件上传路径
  #thymeleaf模板引擎
  thymeleaf:
    mode: HTML
    encoding: UTF-8
    #禁用缓存
    cache: false

  #Web资源配置
  web:
    resources:
      # 让404错误抛出异常
      add-mappings: false

  #服务模块
  devtools:
    restart:
      # 热部署开关
      enabled: true
# MyBatis 配置
mybatis:
  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  mapperLocations: classpath:/mapper/*Dao.xml
  # 搜索指定包别名
  typeAliasesPackage: com.intelligent.outsourcing.entity

# Sa-Token 配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: satoken
  # token有效期，单位s 默认30天, -1代表永不过期(30 * 24 * 60 * 60)
  #  timeout: 60
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒（用到这个30天）
  activity-timeout: 2592000
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: true
  # token风格
  token-style: random-128
  # 是否输出操作日志
  is-log: true
  # 是否自动续签(这里返回的时候会带上satoken)
#  auto-renew: true



